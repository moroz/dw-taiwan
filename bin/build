#!/usr/bin/env bash

# Build task

set -e

export LANG="${LANG:-en_US.UTF-8}"
export MIX_ENV="${MIX_ENV:-prod}"

CURDIR="$PWD"
BINDIR=$(dirname "$0")
cd "$BINDIR"; BINDIR="$PWD"; cd "$CURDIR"

DISTILLERY=$(grep -q distillery mix.lock || echo false)
VERSION=$(grep -oEi 'version:\s*\"([^\"]+)\"' mix.exs | grep -oEi '\".+\"' | grep -oEi '[^\"]+')
ERTS_VERSION=$(erl -noshell -eval 'io:fwrite("~s\n", [erlang:system_info(version)]).' -s erlang halt)
APP_NAME=$(grep -oEi 'app:\s+:\w+,' mix.exs | grep -oEi ':\w+,$' | grep -oEi '\w+')
RELEASE_NAME="${RELEASE_NAME:-$APP_NAME}"
RELEASE_DIR="_build/${MIX_ENV}/rel/${RELEASE_NAME}"
TARBALL="releases/${VERSION}/${RELEASE_NAME}.tar.gz"
BASEDIR="$BINDIR/.."
cd "$BASEDIR"

echo "==> Running build task"

echo "===> Updating Elixir libs"
mix deps.get --only "$MIX_ENV"

echo "===> Compiling"
mix compile

if [ ! -x $(which yarn) ]; then
  echo "===> Installing yarn"
  npm install --global yarn
fi

echo "===> Installing node modules"
(cd assets && yarn install)

echo "===> Generating assets"
(cd assets && yarn deploy)

echo "Building digest files"
mix phx.digest

echo "===> Generating systemd files"
mix systemd.init
mix systemd.generate

echo "===> Generating deploy files"
mix deploy.init
mix deploy.generate

chmod +x bin/*

echo "===> Building release"
# mix release --verbose
# In 1.9.0, the `:default_release` option doesn't work, waiting for the patch
# to get into stable
mix release $RELEASE_NAME --overwrite

if [ "$DISTILLERY" = false ]; then
  echo "===> Compressing release"
  cd "${RELEASE_DIR}"
  chmod 754 "bin/${RELEASE_NAME}" "releases/${VERSION}"/{elixir,iex} "erts-${ERTS_VERSION}/bin/erl"
  tar -czf "${TARBALL}" --exclude="${TARBALL}" *
  echo "Generated release tarball at ${RELEASE_DIR}/${TARBALL}"
fi

echo "Release built!"
